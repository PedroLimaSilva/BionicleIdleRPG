/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 --transform --types --keepnames --keepgroups --keepmeshes --keepmaterials /Users/pedrolimasilva/Dev/BionicleIdleRpg/public/arena.glb 
Files: /Users/pedrolimasilva/Dev/BionicleIdleRpg/public/arena.glb [24.45KB] > /Users/pedrolimasilva/Dev/BionicleIdleRpg/arena-transformed.glb [3.53KB] (86%)
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Ground: THREE.Mesh
    PlaneEM: THREE.Mesh
    PlaneTM: THREE.Mesh
    PlaneEL: THREE.Mesh
    PlaneER: THREE.Mesh
    PlaneTL: THREE.Mesh
    PlaneTR: THREE.Mesh
  }
  materials: {
    Ground: THREE.MeshStandardMaterial
    Places: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/arena-transformed.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh name="Ground" geometry={nodes.Ground.geometry} material={materials.Ground} />
        <mesh name="PlaneEM" geometry={nodes.PlaneEM.geometry} material={materials.Places} position={[0, 0.025, -0.5]} />
        <mesh name="PlaneTM" geometry={nodes.PlaneTM.geometry} material={materials.Places} position={[0, 0.025, 0.5]} />
        <mesh name="PlaneEL" geometry={nodes.PlaneEL.geometry} material={materials.Places} position={[-0.5, 0.025, -0.75]} />
        <mesh name="PlaneER" geometry={nodes.PlaneER.geometry} material={materials.Places} position={[0.5, 0.025, -0.75]} />
        <mesh name="PlaneTL" geometry={nodes.PlaneTL.geometry} material={materials.Places} position={[-0.5, 0.025, 0.75]} />
        <mesh name="PlaneTR" geometry={nodes.PlaneTR.geometry} material={materials.Places} position={[0.5, 0.025, 0.75]} />
      </group>
    </group>
  )
}

useGLTF.preload('/arena-transformed.glb')
